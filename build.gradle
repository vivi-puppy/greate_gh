plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = "${greate_version}"
group = 'electrolyte.greate'
archivesBaseName = 'greate'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {

        configureEach {
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                "greate" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', 'greate'
        }

        server {
            property 'forge.enabledGameTestNamespaces', 'greate'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', 'greate'
        }
        data {
            args '--all', '--mod', 'greate', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing-mod', 'create'
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven { url = 'https://maven.tterrag.com/'
        content {
            includeGroup "com.simibubi.create"
            includeGroup "com.jozufozu.flywheel"
            includeGroup "com.tterrag.registrate"
        }
    }
    maven { url = 'https://maven.blamejared.com'
        content {
            includeGroup "mezz.jei"
        }
    }
    maven { url = 'https://maven.architectury.dev/'
        content {
            includeGroup "dev.architectury"
        }
    }
    maven { url = 'https://maven.saps.dev/minecraft'
        content {
            includeGroup 'dev.latvian.mods'
        }
    }
    maven { url = 'https://cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url = 'https://maven.firstdarkdev.xyz/snapshots'
        content {
            includeGroup 'com.lowdragmc.ldlib'
            includeGroup 'dev.toma.configuration'
        }
    }
    maven { url = 'https://maven.gtceu.com'
        content {
            includeGroup 'com.gregtechceu.gtceu'
        }
    }
    maven { url = 'https://jitpack.io' } //mixinextras
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url = 'https://maven.neoforged.net/releases' }
    maven { url = 'https://maven.quiltmc.org/repository/release/' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor "org.spongepowered:mixin:0.8.7:processor"

    implementation fg.deobf("com.simibubi.create:create-${minecraft_version}:${create_version}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}") { transitive = false }
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}") { transitive = false }
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}") { transitive = false }

    implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")
    implementation fg.deobf("dev.latvian.mods:kubejs-create-forge:${kubejs_create_version}")

    implementation fg.deobf("com.lowdragmc.ldlib:ldlib-forge-${minecraft_version}:${ldlib_version}") { transitive = false }
    implementation fg.deobf("com.gregtechceu.gtceu:gtceu-${minecraft_version}:${gregtech_version}:slim") { transitive = false }
    runtimeOnly fg.deobf("dev.toma.configuration:configuration-forge-${minecraft_version}:${configuration_version}")

    implementation fg.deobf("curse.maven:jade-324717:${jade_version}")
    runtimeOnly fg.deobf("curse.maven:spark-361579:${spark_version}")

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.2"))
    implementation fg.deobf("io.github.llamalad7:mixinextras-forge:0.3.2")
}

mixin {
    add sourceSets.main, "greate-refmap.json"
    config "greate.mixin.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "greate",
                "Specification-Vendor"    : "electrolyte",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "electrolyte",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
